import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.table.DefaultTableModel;

public class Pokedex extends javax.swing.JFrame {
    private List<Pokemon> listaBuscar;
    private List<Pokemon> listaOrdenar;
    private boolean ordenado; //false si está ordenado por id, true si está ordenado por nombre

    public Pokedex() {
        listaBuscar = new ArrayList();
        ordenado = false;
        inicializarLista();
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(Iconos.POKEBALL.getImage());
        setTitle("Pokédex");
        actualizarTabla();
        limpiarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JTabbedPane();
        busqueda = new javax.swing.JPanel();
        cabecera = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        textField = new javax.swing.JTextField();
        imagenlbl = new javax.swing.JLabel();
        pokeball = new javax.swing.JLabel();
        stats = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        tipo1 = new javax.swing.JLabel();
        tipo2 = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        ps = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        ataque = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        defensa = new javax.swing.JProgressBar();
        ataquesp = new javax.swing.JProgressBar();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        defensasp = new javax.swing.JProgressBar();
        velocidad = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        nombre2 = new javax.swing.JLabel();
        nombre3 = new javax.swing.JLabel();
        altura = new javax.swing.JLabel();
        peso = new javax.swing.JLabel();
        ordenamiento = new javax.swing.JPanel();
        cabecera2 = new javax.swing.JPanel();
        atributoCbx = new javax.swing.JComboBox<>();
        ascendenteBtn = new javax.swing.JRadioButton();
        descendenteBtn = new javax.swing.JRadioButton();
        sortBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setFocusable(false);
        bg.setRequestFocusEnabled(false);

        busqueda.setBackground(new java.awt.Color(255, 255, 255));

        searchBtn.setBackground(new java.awt.Color(204, 204, 204));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        textField.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N

        imagenlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagenlbl.setText("Imagen");

        javax.swing.GroupLayout cabeceraLayout = new javax.swing.GroupLayout(cabecera);
        cabecera.setLayout(cabeceraLayout);
        cabeceraLayout.setHorizontalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagenlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchBtn)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        cabeceraLayout.setVerticalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagenlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pokeball.setBackground(new java.awt.Color(51, 102, 255));
        pokeball.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pokeball.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokeball.png"))); // NOI18N

        stats.setBackground(new java.awt.Color(255, 255, 255));
        stats.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 16)); // NOI18N
        stats.setText(" STATS");
        stats.setPreferredSize(new java.awt.Dimension(40, 40));

        id.setBackground(new java.awt.Color(255, 255, 255));
        id.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 18)); // NOI18N
        id.setText("1017");
        id.setPreferredSize(new java.awt.Dimension(40, 40));

        tipo1.setText("Tipo1");
        tipo1.setPreferredSize(new java.awt.Dimension(72, 16));

        tipo2.setText("Tipo2");
        tipo2.setPreferredSize(new java.awt.Dimension(72, 16));

        nombre.setBackground(new java.awt.Color(255, 255, 255));
        nombre.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 24)); // NOI18N
        nombre.setText("INFERNAPE");
        nombre.setPreferredSize(new java.awt.Dimension(40, 40));

        ps.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ps.setForeground(new java.awt.Color(102, 255, 255));
        ps.setMaximum(255);
        ps.setValue(56);
        ps.setString("56");
        ps.setStringPainted(true);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("HP ");

        ataque.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ataque.setForeground(new java.awt.Color(102, 255, 255));
        ataque.setMaximum(190);
        ataque.setValue(56);
        ataque.setString("56 ");
        ataque.setStringPainted(true);

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ATK ");

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("DEF ");

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("SP AT ");

        defensa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        defensa.setForeground(new java.awt.Color(102, 255, 255));
        defensa.setMaximum(232);
        defensa.setValue(56);
        defensa.setString("56 ");
        defensa.setStringPainted(true);

        ataquesp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ataquesp.setForeground(new java.awt.Color(102, 255, 255));
        ataquesp.setMaximum(170);
        ataquesp.setValue(56);
        ataquesp.setString("56 ");
        ataquesp.setStringPainted(true);

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("SP DEF");

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("SPE ");

        defensasp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        defensasp.setForeground(new java.awt.Color(102, 255, 255));
        defensasp.setMaximum(232);
        defensasp.setValue(56);
        defensasp.setString("56 ");
        defensasp.setStringPainted(true);

        velocidad.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        velocidad.setForeground(new java.awt.Color(102, 255, 255));
        velocidad.setMaximum(200);
        velocidad.setValue(56);
        velocidad.setString("56 ");
        velocidad.setStringPainted(true);

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        jLabel3.setText("TOTAL: ");

        total.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        total.setText("100");

        nombre2.setBackground(new java.awt.Color(255, 255, 255));
        nombre2.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 14)); // NOI18N
        nombre2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nombre2.setText("Height:");
        nombre2.setPreferredSize(new java.awt.Dimension(40, 40));

        nombre3.setBackground(new java.awt.Color(255, 255, 255));
        nombre3.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 14)); // NOI18N
        nombre3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nombre3.setText("Weight:");
        nombre3.setPreferredSize(new java.awt.Dimension(40, 40));

        altura.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        altura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        altura.setText("123 pies");

        peso.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        peso.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        peso.setText("123 pies");

        javax.swing.GroupLayout busquedaLayout = new javax.swing.GroupLayout(busqueda);
        busqueda.setLayout(busquedaLayout);
        busquedaLayout.setHorizontalGroup(
            busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cabecera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, busquedaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stats, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addComponent(pokeball)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
            .addGroup(busquedaLayout.createSequentialGroup()
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombre2, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(nombre3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(altura, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(busquedaLayout.createSequentialGroup()
                                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(busquedaLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(defensasp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(busquedaLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(busquedaLayout.createSequentialGroup()
                                    .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ataque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(busquedaLayout.createSequentialGroup()
                                    .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(12, 12, 12)
                                    .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ataquesp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(defensa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        busquedaLayout.setVerticalGroup(
            busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(busquedaLayout.createSequentialGroup()
                .addComponent(cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pokeball)
                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(busquedaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(stats, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ataque, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)))
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defensa, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ataquesp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(altura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defensasp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(3, 3, 3)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(busquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(total))
                .addGap(10, 10, 10))
        );

        bg.addTab("Search               ", busqueda);

        ordenamiento.setBackground(new java.awt.Color(255, 255, 255));

        atributoCbx.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        atributoCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Name", "Hp", "Attack", "Defense", "Sp. Attack", "Sp. Defense", "Speed" }));
        atributoCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atributoCbxActionPerformed(evt);
            }
        });

        ascendenteBtn.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        ascendenteBtn.setSelected(true);
        ascendenteBtn.setText("Ascending");
        ascendenteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascendenteBtnActionPerformed(evt);
            }
        });

        descendenteBtn.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        descendenteBtn.setText("Descending");
        descendenteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descendenteBtnActionPerformed(evt);
            }
        });

        sortBtn.setBackground(new java.awt.Color(204, 204, 204));
        sortBtn.setText("Sort");
        sortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cabecera2Layout = new javax.swing.GroupLayout(cabecera2);
        cabecera2.setLayout(cabecera2Layout);
        cabecera2Layout.setHorizontalGroup(
            cabecera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabecera2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(atributoCbx, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ascendenteBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descendenteBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(sortBtn)
                .addGap(34, 34, 34))
        );
        cabecera2Layout.setVerticalGroup(
            cabecera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabecera2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(cabecera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atributoCbx, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ascendenteBtn)
                    .addComponent(descendenteBtn)
                    .addComponent(sortBtn))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Hp", "Atk", "Def", "Sp Atk", "Sp Def", "Spe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(160);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
            tabla.getColumnModel().getColumn(5).setResizable(false);
            tabla.getColumnModel().getColumn(6).setResizable(false);
            tabla.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout ordenamientoLayout = new javax.swing.GroupLayout(ordenamiento);
        ordenamiento.setLayout(ordenamientoLayout);
        ordenamientoLayout.setHorizontalGroup(
            ordenamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cabecera2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ordenamientoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        ordenamientoLayout.setVerticalGroup(
            ordenamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordenamientoLayout.createSequentialGroup()
                .addComponent(cabecera2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
        );

        bg.addTab("Sort                     ", ordenamiento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String input = textField.getText();
        if(!input.isBlank()){
            Pokemon resultado;
            try{
                int numero = Integer.parseInt(input);
                if(ordenado){//Ordena la lista solo si es necesario
                    QuickSort.quickSort(listaBuscar, "Id");
                    ordenado = false;
                } 
                
                resultado = BusquedaBinaria.busquedaBinaria(listaBuscar, numero);
                if(resultado != null){
                    actualizarComponentes(resultado);
                }
                else{
                    missingno();
                }
            }catch(NumberFormatException e){
                if(!ordenado){
                    QuickSort.quickSort(listaBuscar, "name");
                    ordenado = true;
                }
                
                resultado = BusquedaBinaria.busquedaBinaria(listaBuscar, input);
                if(resultado != null){
                    actualizarComponentes(resultado);
                }
                else{
                    missingno();
                }
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void atributoCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atributoCbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atributoCbxActionPerformed

    /**
     * Utiliza los metodos de ordenamiento de la clase BusquedaBinaria para ordenar listaOrdenar y actualiza la tabla
     * del panel ordenamiento
    */
    private void sortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBtnActionPerformed
        String atributo = atributoCbx.getSelectedItem().toString().toLowerCase();
        if(ascendenteBtn.isSelected()){ //Ordenamiento ascendente
            listaOrdenar = QuickSort.quickSort(listaOrdenar, atributo,"ascendente");
        }
        else{ //Ordenamiento descendente
            listaOrdenar = QuickSort.quickSort(listaOrdenar, atributo,"descendente");
        }
        //Actualizar la tabla
        actualizarTabla();
    }//GEN-LAST:event_sortBtnActionPerformed

    private void ascendenteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascendenteBtnActionPerformed
        if(!descendenteBtn.isSelected())
            descendenteBtn.setSelected(true);
        else
            descendenteBtn.setSelected(false);
    }//GEN-LAST:event_ascendenteBtnActionPerformed

    private void descendenteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descendenteBtnActionPerformed
        if(!ascendenteBtn.isSelected())
            ascendenteBtn.setSelected(true);
        else
            ascendenteBtn.setSelected(false);
    }//GEN-LAST:event_descendenteBtnActionPerformed

    /**
     * Añade todos los pokemon del csv a ambas listas
     */
    private void inicializarLista(){
        String[] datos;
        try(InputStream archivo = Pokedex.class.getResourceAsStream("/listaPokemon.csv");
                Scanner lector = new Scanner(archivo)){
            lector.nextLine(); //Omite el encabezado del csv
            while(lector.hasNext()){
                datos = lector.nextLine().split(",");
                listaBuscar.add(new Pokemon(Integer.parseInt(datos[0]), datos[1], datos[2], datos[3],(Float.parseFloat(datos[4]))/10, (Float.parseFloat(datos[5]))/10, Integer.parseInt(datos[6]),
                Integer.parseInt(datos[7]), Integer.parseInt(datos[8]), Integer.parseInt(datos[9]), Integer.parseInt(datos[10]),
                        Integer.parseInt(datos[11]), datos[12]));
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaOrdenar = new ArrayList(listaBuscar);
    }
    
    /**
     * Muestra todos los datos del pokemon encontrado en la inerfaz gráfica
     * @param pokemon 
     */
    private void actualizarComponentes(Pokemon pokemon){
        //Iniciar descarga de la web
        Thread descargaImagen = new Thread(new DescargaImagen(pokemon.getUrlImagen(),imagenlbl));
        descargaImagen.start();
        textField.setText("");
        
        //Datos generales
        nombre.setText(pokemon.getNombre());
        id.setText(String.valueOf(pokemon.getId()));
        altura.setText(String.valueOf(pokemon.getAltura()) + " m");
        peso.setText(String.valueOf(pokemon.getPeso()) + " kg");
        
        //Estadisticas
        int hp = pokemon.getPs();
        int atq = pokemon.getAtaque();
        int def = pokemon.getDefensa();
        int atqsp = pokemon.getAtaqueEspecial();
        int defsp = pokemon.getDefensaEspecial();
        int vel = pokemon.getVelocidad();
        colorearBarra(ps,hp);
        colorearBarra(ataque,atq);
        colorearBarra(defensa,def);
        colorearBarra(ataquesp,atqsp);
        colorearBarra(defensasp,defsp);
        colorearBarra(velocidad,vel);
        total.setText(String.valueOf(hp+atq+def+atqsp+defsp+vel));

        //Tipos
        if(!tipo1.isVisible()) tipo1.setVisible(true);
        String tipoPrimario = pokemon.getTipo1();
        tipo1.setIcon(Iconos.getIcon(tipoPrimario));
        String tipoSecundario = pokemon.getTipo2();
        if(tipoSecundario == null){
            tipo2.setVisible(false);
        }
        else{
            tipo2.setVisible(true);
            tipo2.setIcon(Iconos.getIcon(tipoSecundario));
        }
        
        //Panel superior Busqueda
        Color color = Iconos.getColorIcon(tipoPrimario);
        cabecera.setBackground(color);
        searchBtn.setBackground(color);
        textField.setBackground(color);
        
        //Panel superior Ordenamiento
        cabecera2.setBackground(color);
        ascendenteBtn.setBackground(color);
        descendenteBtn.setBackground(color);
        atributoCbx.setBackground(color);
        sortBtn.setBackground(color);
        
        try {
            descargaImagen.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Colorea las barras de progreso con un intervalo de colores personalizado
     * @param barra componente a colorear
     * @param dato estadistica del pokemon
     * @param limites los intervalos de variacion de color
     */
    private void colorearBarra(JProgressBar barra,int dato){
        barra.setValue(dato);
        barra.setString(String.valueOf(dato));
        if(dato == 0) return;
        
        int limite = barra.getMaximum() - 20;
        if(dato <= limite * 0.15) barra.setForeground(new Color(255,51,51)); //Naranja
        else if(dato > limite * 0.15 && dato <= limite * 0.40) barra.setForeground(new Color(255,255,51)); //Amarillo
        else if(dato > limite * 0.40 && dato <= limite * 0.95) barra.setForeground(new Color(0,204,0)); //Verde
        else barra.setForeground(new Color(0,204,204)); //Azul
    }
    
    /**
     * Agrega la lista inicial de pokemon a la tabla del panel Ordenamiento
     */
    private void actualizarTabla(){
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        for(Pokemon pokemon: listaOrdenar){
            String datos[] = pokemon.getDatos();
            modelo.addRow(datos);
        }
    }
    
    /**
     * Borra el contenido de los componentes del panel Buscar
     */
    private void limpiarComponentes(){
        tipo1.setText("");
        tipo2.setText("");
        altura.setText("");
        peso.setText("");
        total.setText("");
        nombre.setText("-");
        id.setText("-");
        imagenlbl.setText("");
        colorearBarra(ps,0);
        colorearBarra(ataque,0);
        colorearBarra(defensa,0);
        colorearBarra(ataquesp,0);
        colorearBarra(defensasp,0);
        colorearBarra(velocidad,0);
    }
    
    /**
     * Actualiza los componentes de el panel Busqueda cuando no se encuentra el pokemon indicado
     */
    private void missingno(){
        nombre.setText("MISSINGNO.");
        id.setText("???");
        altura.setText("???");
        peso.setText("???");
        tipo1.setVisible(false);
        tipo2.setVisible(false);
        colorearBarra(ps,0);
        colorearBarra(ataque,0);
        colorearBarra(defensa,0);
        colorearBarra(ataquesp,0);
        colorearBarra(defensasp,0);
        colorearBarra(velocidad,0);
        total.setText("???");
        //Actualizar coloreado
        Color color = new Color(204,204,204);
        cabecera.setBackground(color);
        searchBtn.setBackground(color);
        textField.setBackground(color);
        cabecera2.setBackground(color);
        ascendenteBtn.setBackground(color);
        descendenteBtn.setBackground(color);
        atributoCbx.setBackground(color);
        sortBtn.setBackground(color);
        imagenlbl.setIcon(Iconos.MISSINGNO);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        if(Pokedex.class.getResource("/listaPokemon.csv") == null){
            JOptionPane.showMessageDialog(null, "The Pokémon list will be generated.\nThis may take a few minutes.", "The Pokémon list does not exist locally.", JOptionPane.ERROR_MESSAGE);
            ConsultaAPI.main(args);
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new MetalLookAndFeel());
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
                }
                new Pokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel altura;
    private javax.swing.JRadioButton ascendenteBtn;
    private javax.swing.JProgressBar ataque;
    private javax.swing.JProgressBar ataquesp;
    private javax.swing.JComboBox<String> atributoCbx;
    private javax.swing.JTabbedPane bg;
    private javax.swing.JPanel busqueda;
    private javax.swing.JPanel cabecera;
    private javax.swing.JPanel cabecera2;
    private javax.swing.JProgressBar defensa;
    private javax.swing.JProgressBar defensasp;
    private javax.swing.JRadioButton descendenteBtn;
    private javax.swing.JLabel id;
    private javax.swing.JLabel imagenlbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel nombre2;
    private javax.swing.JLabel nombre3;
    private javax.swing.JPanel ordenamiento;
    private javax.swing.JLabel peso;
    private javax.swing.JLabel pokeball;
    private javax.swing.JProgressBar ps;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton sortBtn;
    private javax.swing.JLabel stats;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField textField;
    private javax.swing.JLabel tipo1;
    private javax.swing.JLabel tipo2;
    private javax.swing.JLabel total;
    private javax.swing.JProgressBar velocidad;
    // End of variables declaration//GEN-END:variables
}
